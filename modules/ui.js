import { domElements } from './dom.js';
import { formatNumber, formatShort, debounce, DEBOUNCE_DELAYS } from './utils.js';
import { transactions } from './state.js';
import { SecurityHelper } from '../config.js';
import { updateHome, updateDollarSavings } from './analytics.js';

// –§—É–Ω–∫—Ü–∏–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
export function show(sectionId) {
    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Å–µ–∫—Ü–∏–∏
    document.querySelectorAll('section').forEach(s => s.style.display = 'none');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—É—é —Å–µ–∫—Ü–∏—é
    const section = document.getElementById(sectionId);
    if (section) section.style.display = 'block';

    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∫–Ω–æ–ø–∫—É –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    document.querySelectorAll('.bottom-nav button').forEach(btn => btn.classList.remove('active'));
    const activeBtn = document.querySelector(`.bottom-nav button[onclick="show('${sectionId}')"]`);
    if (activeBtn) activeBtn.classList.add('active');

    // –í—ã–ø–æ–ª–Ω—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è —Å–µ–∫—Ü–∏–∏ –¥–µ–π—Å—Ç–≤–∏—è
    if (sectionId === 'list') {
        renderAllListDebounced();
    } else if (sectionId === 'add') {
        renderRecentList();
    } else if (sectionId === 'analytics') {
        updateAnalytics();
    } else if (sectionId === 'home') {
        updateDollarSavings();
        updateHome();
    }
}

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
export function showError(message) {
    console.error('‚ùå Error:', message);
    // –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ - –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –∫—Ä–∞—Å–∏–≤—ã–π toast
    alert(`‚ùå ${message}`);
}

export function showSuccess(message) {
    console.log('‚úÖ Success:', message);
    // –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ - –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –∫—Ä–∞—Å–∏–≤—ã–π toast
    alert(`‚úÖ ${message}`);
}

export function showLoadingIndicator(show) {
    if (domElements.refreshIndicator) {
        domElements.refreshIndicator.style.opacity = show ? '1' : '0';
    }
}

// –¢–µ–º–∞
export function toggleTheme() {
    const body = document.body;
    const isDark = body.classList.toggle('dark-theme');
    localStorage.setItem('dark-theme', isDark);
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—ã–ø–∞–¥–∞—é—â–∏—Ö —Å–ø–∏—Å–∫–æ–≤
export function updateDropdowns() {
    const regularTransactions = transactions.filter(t => !t.isDollarSavings);
    const categories = [...new Set(regularTransactions.map(t => SecurityHelper.sanitizeInput(t.category)))].sort();
    const authors = [...new Set(regularTransactions.map(t => SecurityHelper.sanitizeInput(t.author)))].sort();

    const updateSelect = (select, values) => {
        if (!select) return;
        select.innerHTML = '';
        values.forEach(value => {
            const option = document.createElement('option');
            option.value = value;
            option.textContent = value;
            select.appendChild(option);
        });
    };

    updateSelect(domElements.categoriesSelect, categories);
    updateSelect(domElements.editCategoriesSelect, categories);
    updateSelect(domElements.authorsSelect, authors);
    updateSelect(domElements.editAuthorsSelect, authors);
}

// –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
export function createTransactionListItem(tx) {
    const li = document.createElement('li');
    
    const container = document.createElement('div');
    
    // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    const mainInfo = document.createElement('div');
    
    const categoryEl = document.createElement('strong');
    categoryEl.textContent = SecurityHelper.sanitizeInput(tx.category);
    
    const amountSpan = document.createElement('span');
    const amountColor = tx.type === 'income' ? '#34c759' : '#ff3b30';
    const sign = tx.type === 'income' ? '+' : '-';
    const currencySymbol = tx.isDollarSavings ? '$' : '‚ÇΩ';
    amountSpan.textContent = `${sign}${formatNumber(tx.amount)} ${currencySymbol}`;
    amountSpan.style.cssText = `color: ${amountColor}; font-weight: bold; margin-left: 8px;`;
    
    mainInfo.appendChild(categoryEl);
    mainInfo.appendChild(amountSpan);
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    const infoDiv = document.createElement('div');
    infoDiv.className = 'info';
    infoDiv.textContent = `${tx.date} ¬∑ ${SecurityHelper.sanitizeInput(tx.author)}`;
    
    container.appendChild(mainInfo);
    container.appendChild(infoDiv);
    
    // –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–µ—Å–ª–∏ –µ—Å—Ç—å)
    if (tx.comment && tx.comment.trim()) {
        const commentDiv = document.createElement('div');
        commentDiv.className = 'info';
        commentDiv.textContent = `üí¨ ${SecurityHelper.sanitizeInput(tx.comment)}`;
        container.appendChild(commentDiv);
    }
    
    // –î–µ–π—Å—Ç–≤–∏—è
    const actionsDiv = document.createElement('div');
    actionsDiv.className = 'actions';
    
    const editButton = document.createElement('button');
    editButton.className = 'btn small';
    editButton.onclick = () => startEdit(tx.id);
    
    const editIcon = document.createElement('img');
    editIcon.src = 'icons/edit.png';
    editIcon.alt = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å';
    editIcon.className = 'action-icon';
    editButton.appendChild(editIcon);
    
    const deleteButton = document.createElement('button');
    deleteButton.className = 'btn small danger';
    deleteButton.onclick = () => deleteTransaction(tx.id);
    
    const deleteIcon = document.createElement('img');
    deleteIcon.src = 'icons/delete.png';
    deleteIcon.alt = '–£–¥–∞–ª–∏—Ç—å';
    deleteIcon.className = 'action-icon';
    deleteButton.appendChild(deleteIcon);
    
    actionsDiv.appendChild(editButton);
    actionsDiv.appendChild(deleteButton);
    
    li.appendChild(container);
    li.appendChild(actionsDiv);
    
    return li;
}

// –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –æ–ø–µ—Ä–∞—Ü–∏–π
export function renderRecentList() {
    if (!domElements.recentTransactions) return;
    
    if (!transactions || !Array.isArray(transactions)) {
        domElements.recentTransactions.innerHTML = '';
        const li = document.createElement('li');
        li.textContent = '–ó–∞–≥—Ä—É–∑–∫–∞...';
        li.style.color = '#999';
        domElements.recentTransactions.appendChild(li);
        return;
    }
    
    domElements.recentTransactions.innerHTML = '';
    const recent = [...transactions].sort((a, b) => new Date(b.date) - new Date(a.date)).slice(0, 10);
    
    if (recent.length === 0) {
        const li = document.createElement('li');
        li.textContent = '–ù–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–π';
        li.style.color = '#999';
        domElements.recentTransactions.appendChild(li);
        return;
    }
    
    recent.forEach(tx => {
        domElements.recentTransactions.appendChild(createTransactionListItem(tx));
    });
}

// –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π
export function renderAllList() {
    if (!domElements.allTransactions) return;
    
    if (!transactions || !Array.isArray(transactions)) {
        domElements.allTransactions.innerHTML = '';
        const li = document.createElement('li');
        li.textContent = '–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...';
        li.style.color = '#999';
        domElements.allTransactions.appendChild(li);
        return;
    }
    
    domElements.allTransactions.innerHTML = '';
    
    const start = domElements.filterStartInput?.value;
    const end = domElements.filterEndInput?.value;
    if (start) localStorage.setItem('filter-start', start);
    if (end) localStorage.setItem('filter-end', end);
    
    let filtered = transactions;
    if (start) filtered = filtered.filter(t => t.date >= start);
    if (end) filtered = filtered.filter(t => t.date <= end);
    
    if (filtered.length === 0) {
        const li = document.createElement('li');
        li.textContent = '–ù–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–π –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥';
        li.style.color = '#999';
        domElements.allTransactions.appendChild(li);
        return;
    }
    
    const sorted = [...filtered].sort((a, b) => new Date(b.date) - new Date(a.date));
    sorted.forEach(tx => {
        domElements.allTransactions.appendChild(createTransactionListItem(tx));
    });
}

// Debounced –≤–µ—Ä—Å–∏–∏ —Ñ—É–Ω–∫—Ü–∏–π
export const renderAllListDebounced = debounce(renderAllList, DEBOUNCE_DELAYS.RENDER_LIST);

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI
export function updateUI() {
    renderRecentList();
    updateHome();
    updateDollarSavings();
    updateDropdowns();
    if (isSectionActive('analytics')) updateAnalytics();
    if (isSectionActive('list')) renderAllListDebounced();
}

export const updateUIDebounced = debounce(updateUI, DEBOUNCE_DELAYS.UI_UPDATE);

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
export function isSectionActive(sectionId) {
    const section = document.getElementById(sectionId);
    return section && section.style.display !== 'none';
}

// –ò–º–ø–æ—Ä—Ç—ã —Ñ—É–Ω–∫—Ü–∏–π –∏–∑ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π (–±—É–¥—É—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã –ø–æ–∑–∂–µ)
import { startEdit, deleteTransaction } from './transactions.js';
import { updateAnalytics } from './analytics.js';
